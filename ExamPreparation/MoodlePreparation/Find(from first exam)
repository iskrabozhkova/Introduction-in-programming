#include <iostream>

long countDigits(long num) {
	long temp = num;
	long count = 0;
	while (temp != 0) {
		temp /= 10;
		count++;
	}
	return count;
}
int Find(long N, long n) {
	if (n <= 0 || n >= 9) {
		return -1;
	}
	if (N < 0) {
		return -1;
	}
	long count = countDigits(N);

	if (n > count) {
		return -1;
	}
	int* arr = new int[count];
	
	for (int i = count; i >= 0; i--) {
		arr[i] = N % 10;
		N /= 10;
	}
	int max = 0;
	for (int i = 0; i <= count - n; i++) {
		int a = 0;
		for (int j = i; j < n + i; j++) {
			a = a * 10 + arr[j];
		}	
		if (max < a) {
			max = a;
		}
	}
	return max;
}

int main() {
	std::cout << Find(18234, 3);

	return 0;
}
