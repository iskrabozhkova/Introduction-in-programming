#include <iostream>

int Find(long N, int n)
{
	if (n <= 0 || n >= 9)
	{
		return -1;
	}
	if (N < 0)
	{
		return -1;
	}
	long temp = N;
	int count = 0;
	while (temp != 0)
	{
		count++;
		temp /= 10;
	}
	if (n > count)
	{
		return -1;
	}
	int* arr = new int[count];
	int* arr2 = new int[count];
	temp = N;
	count = 0;
	while (temp != 0)
	{
		arr[count] = temp % 10;
		temp /= 10;
		count++;
	}
	for (int i = 0; i < count; i++)
	{
		arr2[i] = arr[count - 1 - i];
	}
	int max = 0;
	for (int i = 0; i <= count - n; i++)
	{
		int a = 0;
		for (int j = i; j < n + i; j++)
		{
			a = a * 10 + arr2[j];
		}
		if (max < a)
		{
			max = a;
		}

	}

	return max;
}

int main() {
	std::cout << Find(18234, 3);

	return 0;
}
